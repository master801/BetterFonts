--- FontRenderer.java	2016-06-25 18:40:14.000000000 -0500
+++ FontRenderer.java.patched	2016-06-25 18:55:37.833607500 -0500
@@ -26,6 +26,10 @@
 import org.apache.commons.io.IOUtils;
 import org.lwjgl.opengl.GL11;
 
+//Start BetterFonts
+import me.isuzutsuki.betterfonts.betterfonts.*;
+//End BetterFonts
+
 @SideOnly(Side.CLIENT)
 public class FontRenderer implements IResourceManagerReloadListener
 {
@@ -74,6 +78,12 @@
     /** Set if the "m" style (strikethrough) is active in currently rendering string */
     private boolean strikethroughStyle;
 
+    //Start BetterFonts
+    public static boolean betterFontsEnabled = true;
+    public StringCache stringCache;
+    public boolean dropShadowEnabled = true, enabled = true;
+    //End BetterFonts
+
     public FontRenderer(GameSettings gameSettingsIn, ResourceLocation location, TextureManager textureManagerIn, boolean unicode)
     {
         this.locationFontTexture = location;
@@ -112,7 +122,25 @@
 
             this.colorCode[i] = (k & 255) << 16 | (l & 255) << 8 | i1 & 255;
         }
-
+        //Start BetterFonts
+        me.isuzutsuki.betterfonts.BetterFontsCore.BETTER_FONTS_LOGGER.info("Starting BetterFonts...");
+        if(location.getResourcePath().equalsIgnoreCase("textures/font/ascii.png") && stringCache == null) {
+            //Read optional config file to override the default font name/size
+            ConfigParser config = new ConfigParser();
+            int fontSize = 18;
+            boolean antiAlias = false;
+            String fontName = "SansSerif";
+            if(config.loadConfig("/config/BetterFonts.cfg")) {
+                fontName = config.getFontName("SansSerif");
+                fontSize = config.getFontSize(18);
+                antiAlias = config.getBoolean("font.antialias", false);
+                dropShadowEnabled = config.getBoolean("font.dropshadow", true);
+                me.isuzutsuki.betterfonts.BetterFontsCore.BETTER_FONTS_LOGGER.info("Loaded configuration...");
+            }
+            stringCache = new StringCache(colorCode);
+            stringCache.setDefaultFont(fontName, fontSize, antiAlias);
+        }
+        //End BetterFonts
         this.readGlyphSizes();
     }
 
@@ -334,6 +362,9 @@
      */
     private String bidiReorder(String text)
     {
+        //Start BetterFonts
+        if (betterFontsEnabled && stringCache != null) return text;
+        //End BetterFonts
         try
         {
             Bidi bidi = new Bidi((new ArabicShaping(8)).shape(text), 127);
@@ -577,6 +608,13 @@
             setColor(this.red, this.blue, this.green, this.alpha);
             this.posX = x;
             this.posY = y;
+            //Start BetterFonts
+            if(betterFontsEnabled && stringCache != null) {
+                posX += stringCache.renderString(text, x, y, color, dropShadow);
+            } else {
+                renderStringAtPos(text,dropShadow);
+            }
+            //End BetterFonts
             this.renderStringAtPos(text, dropShadow);
             return (int)this.posX;
         }
@@ -587,6 +625,9 @@
      */
     public int getStringWidth(String text)
     {
+        //Start BetterFonts
+        if (betterFontsEnabled && stringCache != null) return stringCache.getStringWidth(text);
+        //End BetterFonts
         if (text == null)
         {
             return 0;
@@ -683,6 +724,9 @@
      */
     public String trimStringToWidth(String text, int width, boolean reverse)
     {
+        //Start BetterFonts
+        if (betterFontsEnabled && stringCache != null) return stringCache.trimStringToWidth(text, width, reverse);
+        //End BetterFonts
         StringBuilder stringbuilder = new StringBuilder();
         int i = 0;
         int j = reverse ? text.length() - 1 : 0;
@@ -845,6 +889,9 @@
      */
     private int sizeStringToWidth(String str, int wrapWidth)
     {
+        //Start BetterFonts
+        if (betterFontsEnabled && stringCache != null) return stringCache.sizeStringToWidth(str, wrapWidth);
+        //End BetterFonts
         int i = str.length();
         int j = 0;
         int k = 0;
